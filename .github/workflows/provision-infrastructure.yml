name: Provision Infrastructure

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        description: "The environment to validate the application infrastructure for"
        required: true
        type: string
      BUILD_VERSION:
        description: "The version of the build to deploy to the application resources"
        required: true
        type: string
      AZURE_LOCATION:
        description: "The Azure region to deploy the application resources to"
        required: true
        type: string
      AZURE_ENV_NAME:
        description: "The name of the Azure environment"
        required: true
        type: string

    secrets:
      AZURE_TENANT_ID:
        description: "The Azure tenant ID to use for authentication to Azure for deployment"
        required: true
      AZURE_SUBSCRIPTION_ID:
        description: "The Azure subscription ID to use for authentication to Azure for deployment"
        required: true
      AZURE_CLIENT_ID:
        description: "The Azure client ID to use for authentication to Azure for deployment"
        required: true

jobs:
  provision-infrastructure:
    name: Provision Infrastructure ${{ inputs.ENVIRONMENT }}
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_ENV_NAME: ${{ inputs.AZURE_ENV_NAME }}
      AZURE_LOCATION: ${{ inputs.AZURE_LOCATION }}
      AZURE_PRINCIPAL_ID_TYPE: 'ServicePrincipal'

    environment: ${{ inputs.ENVIRONMENT }}
    runs-on: ubuntu-latest

    outputs:
      WEBAPP_DEFAULT_HOST_NAME: ${{ steps.get_outputs.outputs.WEBAPP_DEFAULT_HOST_NAME }}
      APPLICATION_GATEWAY_PUBLIC_IP_ADDRESS: ${{ steps.get_outputs.outputs.APPLICATION_GATEWAY_PUBLIC_IP_ADDRESS }}
      LOG_ANALYTICS_WORKSPACE_ID: ${{ steps.get_outputs.outputs.LOG_ANALYTICS_WORKSPACE_ID }}
      APPLICATION_INSIGHTS_CONNECTION_STRING: ${{ steps.get_outputs.outputs.APPLICATION_INSIGHTS_CONNECTION_STRING }}
      VM_NAME_OUTPUT: ${{ steps.get_outputs.outputs.VM_NAME_OUTPUT }}
      POSTGRES_SERVER_FQDN: ${{ steps.get_outputs.outputs.POSTGRES_SERVER_FQDN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install azd
        uses: Azure/setup-azd@v2.1.0

      - name: Authenticate azd (Federated Credentials)
        run: |
          azd auth login \
            --client-id "$AZURE_CLIENT_ID" \
            --federated-credential-provider "github" \
            --tenant-id "$AZURE_TENANT_ID"

      - name: Provision Infrastructure
        run: azd provision --no-prompt

      - name: Get Bicep Outputs
        id: get_outputs
        run: |
          # Helper to extract a value from azd env get-values
          get_env_value() {
            azd env get-values | grep "^$1=" | cut -d'=' -f2- | xargs
          }
          echo "WEBAPP_DEFAULT_HOST_NAME=$(get_env_value WEBAPP_DEFAULT_HOST_NAME)" >> $GITHUB_OUTPUT
          echo "APPLICATION_GATEWAY_PUBLIC_IP_ADDRESS=$(get_env_value APPLICATION_GATEWAY_PUBLIC_IP_ADDRESS)" >> $GITHUB_OUTPUT
          echo "LOG_ANALYTICS_WORKSPACE_ID=$(get_env_value LOG_ANALYTICS_WORKSPACE_ID)" >> $GITHUB_OUTPUT
          echo "APPLICATION_INSIGHTS_CONNECTION_STRING=$(get_env_value APPLICATION_INSIGHTS_CONNECTION_STRING)" >> $GITHUB_OUTPUT
          echo "VM_NAME_OUTPUT=$(get_env_value VM_NAME_OUTPUT)" >> $GITHUB_OUTPUT
          echo "POSTGRES_SERVER_FQDN=$(get_env_value POSTGRES_SERVER_FQDN)" >> $GITHUB_OUTPUT
